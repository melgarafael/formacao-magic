---
interface Props {
  phase: string;
  title: string;
  icon: string;
  content: {
    intro: string;
    description: string[];
    inspiration?: string;
  };
}

const { phase, title, icon, content } = Astro.props;
---

<div
  x-show={`activeModal === 'phase-${phase}'`}
  x-transition:enter="transition ease-out duration-300"
  x-transition:enter-start="opacity-0 transform scale-90"
  x-transition:enter-end="opacity-100 transform scale-100"
  x-transition:leave="transition ease-in duration-200"
  x-transition:leave-start="opacity-100 transform scale-100"
  x-transition:leave-end="opacity-0 transform scale-90"
  class="fixed inset-0 z-50 flex items-center justify-center p-4"
  x-cloak
>
  <div class="absolute inset-0 bg-black/80 backdrop-blur-sm" @click="activeModal = null"></div>
  
  <div class="relative bg-dark-800 rounded-xl max-w-2xl w-full p-6 md:p-8 max-h-[90vh] overflow-y-auto">
    <button 
      class="absolute top-4 right-4 text-gray-400 hover:text-white"
      @click="activeModal = null"
    >
      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
        <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
      </svg>
    </button>

    <div class="text-center mb-8">
      <div class="w-16 h-16 rounded-xl bg-primary-500/10 flex items-center justify-center text-primary-400 mx-auto mb-4">
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-8 h-8">
          <path stroke-linecap="round" stroke-linejoin="round" d={icon} />
        </svg>
      </div>
      <div class="text-sm text-primary-400 font-medium mb-1">Fase {phase}</div>
      <h3 class="text-2xl font-bold mb-4">{title}</h3>
      <p class="text-gray-300">{content.intro}</p>
    </div>

    <div class="space-y-6">
      <div>
        <h4 class="font-bold text-lg mb-4">VocÃª vai aprender:</h4>
        <ul class="space-y-3">
          {content.description.map((item) => (
            <li class="flex items-start gap-3">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 text-accent-400 flex-shrink-0 mt-0.5">
                <path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
              <span class="text-gray-300" set:html={item.replace(/\*\*(.*?)\*\*/g, '<strong class="text-accent-400">$1</strong>')}></span>
            </li>
          ))}
        </ul>
      </div>
      
      {content.inspiration && (
        <div class="bg-dark-900 rounded-lg p-4">
          <div class="flex items-center gap-2 text-primary-400 mb-2">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
              <path stroke-linecap="round" stroke-linejoin="round" d="M12 18v-5.25m0 0a6.01 6.01 0 001.5-.189m-1.5.189a6.01 6.01 0 01-1.5-.189m3.75 7.478a12.06 12.06 0 01-4.5 0m3.75 2.383a14.406 14.406 0 01-3 0M14.25 18v-.192c0-.983.658-1.823 1.508-2.316a7.5 7.5 0 10-7.517 0c.85.493 1.509 1.333 1.509 2.316V18" />
            </svg>
            <span class="font-medium">Resultado esperado:</span>
          </div>
          <p class="text-gray-300" set:html={content.inspiration.replace(/\*\*(.*?)\*\*/g, '<strong class="text-accent-400">$1</strong>')}></p>
        </div>
      )}
    </div>
  </div>
</div>